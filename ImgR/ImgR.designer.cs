#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ImgR
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ImgR")]
	public partial class ImgRDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Inserttbl_Image(tbl_Image instance);
    partial void Updatetbl_Image(tbl_Image instance);
    partial void Deletetbl_Image(tbl_Image instance);
    partial void Inserttbl_ImageDevice(tbl_ImageDevice instance);
    partial void Updatetbl_ImageDevice(tbl_ImageDevice instance);
    partial void Deletetbl_ImageDevice(tbl_ImageDevice instance);
    #endregion
		
		public ImgRDataContext() : 
				base(global::ImgR.Properties.Settings.Default.ImgRConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ImgRDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ImgRDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ImgRDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ImgRDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tbl_Image> tbl_Images
		{
			get
			{
				return this.GetTable<tbl_Image>();
			}
		}
		
		public System.Data.Linq.Table<tbl_ImageDevice> tbl_ImageDevices
		{
			get
			{
				return this.GetTable<tbl_ImageDevice>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Image")]
	public partial class tbl_Image : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _OwnerID;
		
		private System.Nullable<int> _OwnerType;
		
		private string _Name;
		
		private string _Extension;
		
		private string _URL;
		
		private string _Title;
		
		private string _Category;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _CreationTime;
		
		private System.Nullable<bool> _Active;
		
		private long _ResizeOf;
		
		private long _BackupOf;
		
		private int _Width;
		
		private int _Height;
		
		private bool _ResizeForDevices;
		
		private System.Nullable<int> _TargetDevice;
		
		private System.Nullable<int> _ResizeDevice;
		
		private EntityRef<tbl_ImageDevice> _tbl_ImageDevice;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnOwnerIDChanging(System.Nullable<long> value);
    partial void OnOwnerIDChanged();
    partial void OnOwnerTypeChanging(System.Nullable<int> value);
    partial void OnOwnerTypeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnExtensionChanging(string value);
    partial void OnExtensionChanged();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreationTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationTimeChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnResizeOfChanging(long value);
    partial void OnResizeOfChanged();
    partial void OnBackupOfChanging(long value);
    partial void OnBackupOfChanged();
    partial void OnWidthChanging(int value);
    partial void OnWidthChanged();
    partial void OnHeightChanging(int value);
    partial void OnHeightChanged();
    partial void OnResizeForDevicesChanging(bool value);
    partial void OnResizeForDevicesChanged();
    partial void OnTargetDeviceChanging(System.Nullable<int> value);
    partial void OnTargetDeviceChanged();
    partial void OnResizeDeviceChanging(System.Nullable<int> value);
    partial void OnResizeDeviceChanged();
    #endregion
		
		public tbl_Image()
		{
			this._tbl_ImageDevice = default(EntityRef<tbl_ImageDevice>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerID", DbType="BigInt")]
		public System.Nullable<long> OwnerID
		{
			get
			{
				return this._OwnerID;
			}
			set
			{
				if ((this._OwnerID != value))
				{
					this.OnOwnerIDChanging(value);
					this.SendPropertyChanging();
					this._OwnerID = value;
					this.SendPropertyChanged("OwnerID");
					this.OnOwnerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerType", DbType="Int")]
		public System.Nullable<int> OwnerType
		{
			get
			{
				return this._OwnerType;
			}
			set
			{
				if ((this._OwnerType != value))
				{
					this.OnOwnerTypeChanging(value);
					this.SendPropertyChanging();
					this._OwnerType = value;
					this.SendPropertyChanged("OwnerType");
					this.OnOwnerTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Extension", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Extension
		{
			get
			{
				return this._Extension;
			}
			set
			{
				if ((this._Extension != value))
				{
					this.OnExtensionChanging(value);
					this.SendPropertyChanging();
					this._Extension = value;
					this.SendPropertyChanged("Extension");
					this.OnExtensionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="VarChar(MAX)")]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this.OnURLChanging(value);
					this.SendPropertyChanging();
					this._URL = value;
					this.SendPropertyChanged("URL");
					this.OnURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(255)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="VarChar(255)")]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResizeOf", DbType="BigInt NOT NULL")]
		public long ResizeOf
		{
			get
			{
				return this._ResizeOf;
			}
			set
			{
				if ((this._ResizeOf != value))
				{
					this.OnResizeOfChanging(value);
					this.SendPropertyChanging();
					this._ResizeOf = value;
					this.SendPropertyChanged("ResizeOf");
					this.OnResizeOfChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BackupOf", DbType="BigInt NOT NULL")]
		public long BackupOf
		{
			get
			{
				return this._BackupOf;
			}
			set
			{
				if ((this._BackupOf != value))
				{
					this.OnBackupOfChanging(value);
					this.SendPropertyChanging();
					this._BackupOf = value;
					this.SendPropertyChanged("BackupOf");
					this.OnBackupOfChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Width", DbType="Int NOT NULL")]
		public int Width
		{
			get
			{
				return this._Width;
			}
			set
			{
				if ((this._Width != value))
				{
					this.OnWidthChanging(value);
					this.SendPropertyChanging();
					this._Width = value;
					this.SendPropertyChanged("Width");
					this.OnWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height", DbType="Int NOT NULL")]
		public int Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResizeForDevices", DbType="Bit NOT NULL")]
		public bool ResizeForDevices
		{
			get
			{
				return this._ResizeForDevices;
			}
			set
			{
				if ((this._ResizeForDevices != value))
				{
					this.OnResizeForDevicesChanging(value);
					this.SendPropertyChanging();
					this._ResizeForDevices = value;
					this.SendPropertyChanged("ResizeForDevices");
					this.OnResizeForDevicesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetDevice", DbType="Int")]
		public System.Nullable<int> TargetDevice
		{
			get
			{
				return this._TargetDevice;
			}
			set
			{
				if ((this._TargetDevice != value))
				{
					if (this._tbl_ImageDevice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTargetDeviceChanging(value);
					this.SendPropertyChanging();
					this._TargetDevice = value;
					this.SendPropertyChanged("TargetDevice");
					this.OnTargetDeviceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResizeDevice", DbType="Int")]
		public System.Nullable<int> ResizeDevice
		{
			get
			{
				return this._ResizeDevice;
			}
			set
			{
				if ((this._ResizeDevice != value))
				{
					this.OnResizeDeviceChanging(value);
					this.SendPropertyChanging();
					this._ResizeDevice = value;
					this.SendPropertyChanged("ResizeDevice");
					this.OnResizeDeviceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_ImageDevice_tbl_Image", Storage="_tbl_ImageDevice", ThisKey="TargetDevice", OtherKey="ID", IsForeignKey=true)]
		public tbl_ImageDevice tbl_ImageDevice
		{
			get
			{
				return this._tbl_ImageDevice.Entity;
			}
			set
			{
				tbl_ImageDevice previousValue = this._tbl_ImageDevice.Entity;
				if (((previousValue != value) 
							|| (this._tbl_ImageDevice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_ImageDevice.Entity = null;
						previousValue.tbl_Images.Remove(this);
					}
					this._tbl_ImageDevice.Entity = value;
					if ((value != null))
					{
						value.tbl_Images.Add(this);
						this._TargetDevice = value.ID;
					}
					else
					{
						this._TargetDevice = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_ImageDevice");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_ImageDevice")]
	public partial class tbl_ImageDevice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _ShortName;
		
		private string _UserAgent;
		
		private int _Width;
		
		private int _Height;
		
		private int _Orientation;
		
		private bool _IsDefault;
		
		private System.Nullable<bool> _Active;
		
		private EntitySet<tbl_Image> _tbl_Images;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnUserAgentChanging(string value);
    partial void OnUserAgentChanged();
    partial void OnWidthChanging(int value);
    partial void OnWidthChanged();
    partial void OnHeightChanging(int value);
    partial void OnHeightChanged();
    partial void OnOrientationChanging(int value);
    partial void OnOrientationChanged();
    partial void OnIsDefaultChanging(bool value);
    partial void OnIsDefaultChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public tbl_ImageDevice()
		{
			this._tbl_Images = new EntitySet<tbl_Image>(new Action<tbl_Image>(this.attach_tbl_Images), new Action<tbl_Image>(this.detach_tbl_Images));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAgent", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string UserAgent
		{
			get
			{
				return this._UserAgent;
			}
			set
			{
				if ((this._UserAgent != value))
				{
					this.OnUserAgentChanging(value);
					this.SendPropertyChanging();
					this._UserAgent = value;
					this.SendPropertyChanged("UserAgent");
					this.OnUserAgentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Width", DbType="Int NOT NULL")]
		public int Width
		{
			get
			{
				return this._Width;
			}
			set
			{
				if ((this._Width != value))
				{
					this.OnWidthChanging(value);
					this.SendPropertyChanging();
					this._Width = value;
					this.SendPropertyChanged("Width");
					this.OnWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height", DbType="Int NOT NULL")]
		public int Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Orientation", DbType="Int NOT NULL")]
		public int Orientation
		{
			get
			{
				return this._Orientation;
			}
			set
			{
				if ((this._Orientation != value))
				{
					this.OnOrientationChanging(value);
					this.SendPropertyChanging();
					this._Orientation = value;
					this.SendPropertyChanged("Orientation");
					this.OnOrientationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDefault", DbType="Bit NOT NULL")]
		public bool IsDefault
		{
			get
			{
				return this._IsDefault;
			}
			set
			{
				if ((this._IsDefault != value))
				{
					this.OnIsDefaultChanging(value);
					this.SendPropertyChanging();
					this._IsDefault = value;
					this.SendPropertyChanged("IsDefault");
					this.OnIsDefaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_ImageDevice_tbl_Image", Storage="_tbl_Images", ThisKey="ID", OtherKey="TargetDevice")]
		public EntitySet<tbl_Image> tbl_Images
		{
			get
			{
				return this._tbl_Images;
			}
			set
			{
				this._tbl_Images.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_Images(tbl_Image entity)
		{
			this.SendPropertyChanging();
			entity.tbl_ImageDevice = this;
		}
		
		private void detach_tbl_Images(tbl_Image entity)
		{
			this.SendPropertyChanging();
			entity.tbl_ImageDevice = null;
		}
	}
}
#pragma warning restore 1591
